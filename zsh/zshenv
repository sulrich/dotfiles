# -*- Mode: shell-script; tab-width: 2 -*- *

# this should prevent me from sourcing the /etc/z* files
unsetopt GLOBAL_RCS

export SKIP_GLOBAL_COMPINIT=1

# shell specific vars
export DIRSTACKSIZE=20

HISTSIZE=500
HISTFILE="${HOME}/.zsh_history"
SAVEHIST=500
# [ -z "$HISTFILE" ] && HISTFILE="${HOME}/.zsh_history"

export HOSTNAME=$HOST
export PLATFORM=$(uname)

#---------------------------------------------------------------------
# generic environment variables
export PYTHON2_VER="2.7.18"
export PYTHON3_MAJOR="python3.12"
export PYTHON3_VER="3.12.4"

# i have mixed feelings about the following.  if i were in a consistent
# development mode of operation would probably need to enable this.
# set to true in a pristine environment.  documenting this for future me.
export PIP_REQUIRE_VIRTUALENV=false
export TTY
export PAGER="less"
export LYNX_CFG="${HOME}/.home/lynx.cfg"
export CVS_RSH=ssh
export CLICOLOR=1
export GOPATH=${HOME}/go

# export LESS="$LESS -i -x2" # do we still need this zhsrc-custom?
# added the eFRX to pass through escape characters in git diff mode
export LESS="$LESS -eFRX -i -x2"
export GPG_TTY=$(tty)
export OC_PATH_DUMP="${HOME}/.home/openconfig/oc-path-list.txt"
export PATHREPORT_LATEST="${HOME}/.home/openconfig/pathreport-latest.csv"
export CLAB_DIR="${HOME}/clab"

# localization info
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# env fixups if remote
if (( ${+SSH_CONNECTION} ));
then
  export TMUX_COLOR="coral"
else
  # when i'm local on my mac
  export TMUX_COLOR="moon"
fi

# pyang specific variables, etc.
export YANG_MODPATH=${HOME}/src/yang/standard:${HOME}/src/openconfig/public/release
export YANG_PLUGINS="${HOME}/.pyang"

setpath() {
  LOCAL_PATH="${HOME}/.local/bin"

  if [[ -d "/opt/homebrew/bin" ]];
  then
    LOCAL_PATH="${LOCAL_PATH}:/opt/homebrew/bin:/opt/homebrew/sbin"
  fi

  LOCAL_PATH="${LOCAL_PATH}:/usr/local/bin:/usr/local/sbin:${GOPATH}/bin:/usr/bin:/usr/sbin:/sbin"
  CARGO_DIR="${HOME}/.cargo/bin"

  # handle cases where we need to shim the go binaries into the path due to a
  # non-default installation of golang
  if [[ -d "/usr/local/go/bin" ]];
  then
    LOCAL_PATH="/usr/local/go/bin:${LOCAL_PATH}"
  fi

  # if go isn't installed globally on a linux host ...
  if [[ -d "${HOME}/.local/go/bin" ]];
  then
    LOCAL_PATH="${HOME}/.local/go/bin:${LOCAL_PATH}"
  fi

  # inject rust cargo into the path as appropriate
  if [[ -d "${CARGO_DIR}" ]];
  then
    CARGO_PATH="${CARGO_DIR}:"
  else
    CARGO_PATH=""
  fi

  # set path to address OS/arch  specific binaries within home directory
  # OSPATH=`uname -ms | sed 's| |/|g'`
  export PATH="${CARGO_PATH}${LOCAL_PATH}:${HOME}/bin:${PATH}:."
  export MANPATH="/usr/local/man:/usr/man:/usr/share/man:"
  export MANPATH="${MANPATH}:/usr/X11R6/man:/usr/local/man:${HOME}/Library/man:."
  export INFOPATH="/usr/local/share/info:${INFOPATH}"

  # snmptools needs to pick this up
  # note that the default "/usr/share/snmp/mibs" is available across most unixes
  # this includes macos.  the balance of the mibs can be installed from my
  # personal stash.
  export MIBDIRS="/usr/share/snmp/mibs:${HOME}/.snmp/mibs/cisco:${HOME}/.snmp/mibs/juniper"
  export MIBDIRS="${MIBDIRS}:${HOME}/.snmp/mibs/std:${HOME}/.snmp/mibs/misc:."
  
  # pull in the gcloud sdk tools
  if [ -f "${HOME}/src/google-cloud-sdk/path.zsh.inc" ]
  then
    source "${HOME}/src/google-cloud-sdk/path.zsh.inc"
  fi
} # end setpath()


# check to see if we're in tmux
if [[ -z ${TMUX} ]];  # we're not in tmux
then
  # construct the necessary path elements
  setpath

  # pull in platform-specific environment variables, etc.
  if [ -e "${HOME}/.home/zsh/platform/${PLATFORM}-env.zsh" ]
  then
    source "${HOME}/.home/zsh/platform/${PLATFORM}-env.zsh"
  fi

  # pull in host-specific environment variables, etc.
  if [ -e  "${HOME}/.home/zsh/hosts/${HOSTNAME}-env.zsh" ]
  then
    source "${HOME}/.home/zsh/hosts/${HOSTNAME}-env.zsh"
  fi

  # include credentials which are embedded in environment variables.
  # THIS MUST NOT BE INCLUDED IN GIT REPOS
  if [ -f "${HOME}/.credentials/00-api-creds.env" ];
  then
    source "${HOME}/.credentials/00-api-creds.env"
  fi

  # pull in the 1password plugin-tools
  if [ -f "${HOME}/.config/op/plugins.sh" ];
  then
    source "${HOME}/.config/op/plugins.sh"
  fi
  # end of environment init outside of tmux
else
  # we're inside of tmux - we'll inherit the necessary bits
fi

if (( $+commands[nvim] == 1 ));
then
  export EDITOR=nvim
else
  export EDITOR=vi
fi
export VISUAL=${EDITOR}

# if there are host-specific environment variables that we don't want in version
# control, these can be added to the ~/.host-env file.  note that these will
# override anything established above.
if [ -f "${HOME}/.host-env" ];
then
  source "${HOME}/.host-env"
fi
